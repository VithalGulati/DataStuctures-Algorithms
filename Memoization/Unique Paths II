class Solution {
public:
    int path(int i,int j,vector<vector<int>>& obstacleGrid,vector<vector<int>>& dp){
        if(i==0 && j==0 && !obstacleGrid[i][j]) return 1;
        if(i<0 || j<0) return 0;
        if(obstacleGrid[i][j]==1) return 0;
        if(dp[i][j]!=-1) return dp[i][j];
        return dp[i][j]=path(i-1,j,obstacleGrid,dp)+path(i,j-1,obstacleGrid,dp);
    }
    
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        vector<vector<int>> dp(obstacleGrid.size(),vector<int> (obstacleGrid[0].size(),-1));
        return path(obstacleGrid.size()-1,obstacleGrid[0].size()-1,obstacleGrid,dp);
    }
};
