Given an integer n, return true if it is possible to represent n as the sum of distinct powers of three. Otherwise, return false.

An integer y is a power of three if there exists an integer x such that y == 3x.

 

Example 1:

Input: n = 12
Output: true
Explanation: 12 = 31 + 32
Example 2:

Input: n = 91
Output: true
Explanation: 91 = 30 + 32 + 34
Example 3:

Input: n = 21
Output: false
 

Constraints:

1 <= n <= 107

class Solution {
public:
    bool checkPowersOfThree(int n) {
            int z=1;
            vector<int>v(16);
            
        for(int i=0;i<=15;i++)
        {   v[i]=z;
            z=z*3;
        }
        
        for(int i=15;i>=0;i--)
        {
            if(v[i]<=n)
            {
                n=n-v[i];
            }
            
               if(n==0)
                return true;
        }
        return false;}};
